{"version":3,"sources":["CodeReader.tsx","App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["CodeReader","useState","data","setData","error","setError","supported","setSupported","useEffect","navigator","Box","p","Grid","container","spacing","item","md","delay","onError","err","onScan","style","width","JSON","stringify","App","Button","variant","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","purple","secondary","green","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"0OAsDeA,EAjDI,WAAO,IAAD,EACAC,mBAAiB,IADjB,mBACdC,EADc,KACTC,EADS,OAEEF,mBAAc,IAFhB,mBAEdG,EAFc,KAERC,EAFQ,OAGUJ,mBAAc,IAHxB,mBAGdK,EAHc,KAGJC,EAHI,KAiBrB,OAJAC,qBAAU,WACN,IAAMF,EAAY,iBAAkBG,UACpCF,EAAaD,KACf,IAEE,cAACI,EAAA,EAAD,CAAKC,EAAG,EAAR,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAEC,GAAI,GAAhB,SACI,4BAAId,MAER,cAACU,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CACIC,MAAO,IACPC,QAhBA,SAACC,GACjBd,EAASc,IAgBOC,OAtBD,SAAClB,GACZA,GACAC,EAAQD,IAqBImB,MAAO,CAAEC,MAAO,YAGxB,cAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,+BACKO,KAAKC,UAAUlB,EAAU,KAAK,OAGvC,cAACM,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,+BACKO,KAAKC,UAAUpB,EAAM,KAAK,aC3BpCqB,MAXf,WACI,OACI,gCACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAlC,yBAGA,cAAC,EAAD,QCGGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kDCMCQ,EAXDC,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,KAAMC,IAAO,MAEjBC,UAAW,CACPF,KAAMG,IAAM,SCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAACC,EAAA,EAAD,CAAeX,MAAOA,EAAtB,SACI,cAAC,EAAD,QAGRY,SAASC,eAAe,SAE1BtB,M","file":"static/js/main.2cc260b0.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport QrReader from 'react-qr-reader'\r\nimport {Box, Grid} from \"@material-ui/core\";\r\n\r\n\r\nconst CodeReader = () => {\r\n    const [data,setData]=useState<string>('')\r\n    const [error,setError]=useState<any>('')\r\n    const [supported,setSupported]=useState<any>('')\r\n\r\n    const handleScan = (data: string | null) => {\r\n        if (data) {\r\n            setData(data)\r\n        }\r\n    }\r\n    const handleError = (err:any) => {\r\n        setError(err)\r\n    }\r\n    useEffect(()=>{\r\n        const supported = 'mediaDevices' in navigator;\r\n        setSupported(supported)\r\n    },[])\r\n    return (\r\n        <Box p={3}>\r\n            <Grid container spacing={2}>\r\n                <Grid item  md={12}>\r\n                    <p>{data}</p>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                    <QrReader\r\n                        delay={300}\r\n                        onError={handleError}\r\n                        onScan={handleScan}\r\n                        style={{ width: '100%' }}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                    <code>\r\n                        {JSON.stringify(supported,null,2)}\r\n                    </code>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                    <code>\r\n                        {JSON.stringify(error,null,2)}\r\n                    </code>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nexport default CodeReader;\r\n","import React from 'react';\nimport {Button} from \"@material-ui/core\";\nimport CodeReader from \"./CodeReader\";\n\n\nfunction App() {\n    return (\n        <div>\n            <Button variant=\"contained\" color=\"primary\">\n                Hello World\n            </Button>\n            <CodeReader/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: purple[500],\r\n        },\r\n        secondary: {\r\n            main: green[500],\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ThemeProvider,} from '@material-ui/core/styles';\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ThemeProvider theme={theme}>\n          <App />\n      </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}